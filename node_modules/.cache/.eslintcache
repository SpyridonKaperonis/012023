[{"/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/index.js":"1","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/App.js":"2","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/reportWebVitals.js":"3","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/components/navBar.js":"4","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/components/scrollView.js":"5","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/components/githubCard.js":"6","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/pages/styles.js":"7","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/pages/resume.js":"8","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/pages/about.js":"9","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/pages/projects.js":"10","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/pages/intro.js":"11","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/components/paragraphAbout.js":"12","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/components/nameHealine.js":"13","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/components/loadImage.js":"14","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/components/gitHubLinkedInBtn.js":"15"},{"size":535,"mtime":1672990473433,"results":"16","hashOfConfig":"17"},{"size":2119,"mtime":1673994280245,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1672603183459,"results":"19","hashOfConfig":"17"},{"size":4100,"mtime":1673280555070,"results":"20","hashOfConfig":"17"},{"size":1917,"mtime":1672992123291,"results":"21","hashOfConfig":"17"},{"size":866,"mtime":1673281307989,"results":"22","hashOfConfig":"17"},{"size":3642,"mtime":1673001699651,"results":"23","hashOfConfig":"17"},{"size":587,"mtime":1673812758597,"results":"24","hashOfConfig":"17"},{"size":1969,"mtime":1673008674127,"results":"25","hashOfConfig":"17"},{"size":2493,"mtime":1673345687440,"results":"26","hashOfConfig":"17"},{"size":456,"mtime":1673015199990,"results":"27","hashOfConfig":"17"},{"size":318,"mtime":1673281219782,"results":"28","hashOfConfig":"17"},{"size":265,"mtime":1673003180682,"results":"29","hashOfConfig":"17"},{"size":244,"mtime":1673014983607,"results":"30","hashOfConfig":"17"},{"size":865,"mtime":1673109667819,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"lanpcb",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"35"},"/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/index.js",[],[],[],"/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/App.js",["82"],[],"/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/reportWebVitals.js",[],[],"/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/components/navBar.js",["83","84"],[],"// import { styles } from '../pages/styles';\nimport { useState } from 'react';\nimport { BsGithub, BsLinkedin } from 'react-icons/bs'\nimport { Link, useLocation } from 'react-router-dom';\nimport { GitHubLinkedInBtn } from './gitHubLinkedInBtn';\n\nfunction formater(date){\n    console.log('Two')\n    const dateSplit = date.split(\" \");\n    console.log('Splitted Date: ', dateSplit)\n\n    const year = dateSplit[3];\n    const day = dateSplit[0];\n    const dayNum = dateSplit[2];\n    const month = dateSplit[1];\n\n\n    return {\n        day: day,\n        dayNum: dayNum,\n        year: year,\n        month: month,\n    }\n}\n\n\n\n\n\n\n\nexport const NavBar = (props) => {\n    const original_date = props.date.toString()\n    console.log('One')\n    const newDate = formater(original_date)\n  \n    // let [over, setOver] = useState(false);\n\n    // if(over){\n    //     styles.GLIcons.backgroundColor='red';\n    //     console.log('OVER')\n    // }\n    // else {\n    //     styles.GLIcons.backgroundColor='';\n    //     console.log('OUT')\n    // }\n\n\n  return (\n    <div style={styles.Container}>\n        <div style={styles.dateContainer}>\n            <h3 style={styles.dateSpace}>{newDate.dayNum}</h3>\n            <h3 style={styles.dateSpace}>{newDate.day}</h3>\n            <h3 style={styles.dateSpace}>{newDate.month}</h3>\n            <h3 style={styles.dateSpace}>{newDate.year}</h3>\n        </div>\n        <div style={styles.buttonsContainer}>\n            <nav>\n               \n                <Link \n                    to={'/'}\n                    style={useLocation().pathname==='/' ? styles.sideBarButtonClicked : styles.sideBarButton}>Intro</Link>\n\n                <Link \n                    to={'/about'}  \n                    style={useLocation().pathname==='/about' ? styles.sideBarButtonClicked : styles.sideBarButton}>About</Link>\n        \n                <Link \n                    to={'/resume'} \n                    style={useLocation().pathname==='/resume' ? styles.sideBarButtonClicked : styles.sideBarButton}>Resume</Link>\n            \n                <Link \n                    to={'/projects'} \n                    style={useLocation().pathname==='/projects' ? styles.sideBarButtonClicked : styles.sideBarButton}>Projects</Link>\n            \n            </nav>\n        </div>\n\n        <div style={styles.linkedInGitContainer}>\n            \n            <div style={styles.GLIcons}>\n                <BsGithub size={'4vh'} onClick={undefined}/>\n            </div>\n            <div style={styles.GLIcons}>\n                <BsLinkedin size={'4vh'} onClick={undefined}/>\n            </div>\n        </div>\n    </div>\n  );\n};\n\nconst styles = {\n    Container: {\n        display: \"flex\", \n        flexDirection: \"column\",\n        borderWidth: '4px',\n        borderColor: 'black',\n    \n    },\n\n    dateContainer:{\n        display: 'flex',\n        flexDirection: 'row',\n   \n        justifyContent: 'center',\n        margin: '1vh',\n        fontSize: '2vh',\n        backgroundColor: '#E5E4E2',\n    },\n\n    dateSpace: {\n    padding: '3px'\n    },   \n\n    buttonsContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: '5vh'\n    },\n\n    sideBarButton: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        padding: '3vh',\n        marginTop: '1.5vh',\n        backgroundColor: '#E5E4E2',\n        fontWeight: 'bold',\n        fontSize: '3vh',\n        color: 'black',\n        textDecoration: 'none'\n    },\n\n    sideBarButtonClicked: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        padding: '3vh',\n        marginTop: '1.5vh',\n        backgroundColor: 'white',\n        fontWeight: 'bold',\n        fontSize: '3vh',\n        color: 'black',\n        textDecoration: 'none'\n    },\n\n    linkedInGitContainer: {\n        display: 'flex',\n        marginTop: '28vh',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n\n    GLIcons: {\n        margin: '2vh', \n        padding: '2vh',\n        border: '1px solid black',\n        borderRadius: '2vh', \n        backgroundColor: '',\n    },\n\n}\n\n\n","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/components/scrollView.js",[],[],"/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/components/githubCard.js",[],[],"/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/pages/styles.js",[],[],"/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/pages/resume.js",["85"],[],"import React, {useState} from 'react'\nimport { Document, Page } from 'react-pdf'\n\nimport pdf_ from './pdf/ClaudeShannonInformationTheoryPaper.pdf'\n\nexport const Resume = () => {\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n\n  return (\n    <div>\n      <Document file={pdf_} onLoadSuccess={onDocumentLoadSuccess}>\n        <Page pageNumber={pageNumber} />\n      </Document>\n      <p>\n        Page {pageNumber} of {numPages}\n      </p>\n    </div>\n  );\n}\n","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/pages/about.js",["86"],[],"import React from 'react'\nimport { ParagraphAbout } from '../components/paragraphAbout'\nimport { styles } from './styles'\n\nexport const About = () => {\n\n  const aboutParagraphs = {\n    two: 'I have always been fascinated by the potential of machine learning to transform industries and improve peoples lives. This passion has driven me to pursue a career in software engineering, where I can use my skills and knowledge to develop and implement machine learning models and algorithms.',\n    one: 'Hi there! My name is Spyridon and I am a software engineer with a passion for machine learning and a love for problem-solving and creating innovative solutions. In my free time, you can find me buried in a good book or hitting the gym to stay active.',\n    three: 'Aside from my love for software and machine learning, I am also an avid reader and enjoy delving into a wide range of books, from science fiction to non-fiction. Reading allows me to expand my knowledge and gain new perspectives, which I believe is crucial for personal growth and success.',\n    four:'In addition to my intellectual pursuits, I also value the importance of staying physically fit. I enjoy participating in a variety of sports and activities, such as running, cycling, and weightlifting. Not only does it keep me healthy and energized, but it also helps me to stay focused and clear-minded.',\n    five:' Overall, I am a driven and motivated individual with a strong passion for software engineering and machine learning. I am excited to bring my skills and enthusiasm to a dynamic team and make a positive impact through my work.',\n  }\n\n\n  return (\n\n    <>\n      <div>\n        <ParagraphAbout text={aboutParagraphs.one}/>\n      \n        <ParagraphAbout text={aboutParagraphs.two}/>\n        \n        <ParagraphAbout text={aboutParagraphs.three}/>\n\n        <ParagraphAbout text={aboutParagraphs.four}/>\n\n        <ParagraphAbout text={aboutParagraphs.five}/>\n        \n      </div>\n    </>\n  )\n}","/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/pages/projects.js",[],[],"/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/pages/intro.js",[],[],"/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/components/paragraphAbout.js",[],[],"/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/components/nameHealine.js",[],[],"/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/components/loadImage.js",[],[],"/home/spyros/Documents/Projects/personalWebPage/personal-webpage/src/components/gitHubLinkedInBtn.js",["87"],[],"import React, { useState } from 'react'\nimport { BsGithub, BsLinkedin } from 'react-icons/bs'\n\n\nexport const GitHubLinkedInBtn = () => {\n\n    let [over, setOver] = useState(false);\n\n    if(over){\n        styles.GLIcons.backgroundColor='white';\n        console.log('OVER')\n    }\n    else {\n        styles.GLIcons.backgroundColor='';\n        console.log('OUT')\n    }\n\n    // const handleMouseOver = () => {setOver(true)}\n\n\n\n  return (\n    <div>\n        <div style={styles.GLIcons}>\n            <BsGithub size={'4vh'} onClick={undefined}/>\n        </div>\n        <div style={styles.GLIcons}>\n            <BsLinkedin size={'4vh'} onClick={undefined}/>\n        </div>\n    </div>\n  )\n};\n\n\nconst styles = {\n    GLIcons: {\n        margin: '2vh', \n        padding: '2vh',\n        border: '1px solid black',\n        borderRadius: '2vh', \n        backgroundColor: '',\n    },\n}",{"ruleId":"88","severity":1,"message":"89","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":20},{"ruleId":"88","severity":1,"message":"92","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":18},{"ruleId":"88","severity":1,"message":"93","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":27},{"ruleId":"88","severity":1,"message":"94","line":8,"column":22,"nodeType":"90","messageId":"91","endLine":8,"endColumn":35},{"ruleId":"88","severity":1,"message":"95","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":16},{"ruleId":"88","severity":1,"message":"96","line":7,"column":16,"nodeType":"90","messageId":"91","endLine":7,"endColumn":23},"no-unused-vars","'ScrollView' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'GitHubLinkedInBtn' is defined but never used.","'setPageNumber' is assigned a value but never used.","'styles' is defined but never used.","'setOver' is assigned a value but never used."]